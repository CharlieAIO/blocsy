version: '3.8'

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
    networks:
      - my_network
    depends_on:
      - api
      - txProcessor
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256m
          cpus: "0.2"
        reservations:
          memory: 128m

  listener:
    restart: unless-stopped
    image: listener:latest
    ports:
      - "6060:6060"
    build:
      context: .
      dockerfile: Dockerfile.listener
    env_file:
      - .env
    networks:
      - my_network
    depends_on:
      - rabbitmq
    healthcheck:
      test: ["CMD", "curl", "-f", "http://rabbitmq:15672"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 1g
          cpus: "0.5"
        reservations:
          memory: 512m

  txProcessor:
    restart: unless-stopped
    image: txprocessor:latest
    build:
      context: .
      dockerfile: Dockerfile.txprocessor
    env_file:
      - .env
    networks:
      - my_network
    ports:
      - "8081:8081"
    depends_on:
      - rabbitmq
    deploy:
      resources:
        limits:
          memory: 25g
          cpus: "6"
        reservations:
          memory: 10g

  api:
    restart: unless-stopped
    image: api:latest
    build:
      context: .
      dockerfile: Dockerfile.api
    env_file:
      - .env
    networks:
      - my_network
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: "0.5"
        reservations:
          memory: 256m

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: LmBiB.@GYg6d4DuK6ABq
      RABBITMQ_ERLANG_COOKIE: 'e9b1c3d4e5f6a7b8c9d0e1f2a3b4c5d6'
    networks:
      - my_network
    restart: always
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 12g
          cpus: "2"
        reservations:
          memory: 1g

networks:
  my_network:
    driver: bridge

volumes:
  rabbitmq_data:
    driver: local
