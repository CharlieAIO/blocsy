// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package  types

import (
  "github.com/mailru/easyjson/jwriter"
  "github.com/mailru/easyjson/jlexer"
)

func ( AccountKey ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* AccountKey ) UnmarshalJSON([]byte) error { return nil }
func ( AccountKey ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* AccountKey ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_AccountKey *AccountKey

func ( AddressTableLookup ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* AddressTableLookup ) UnmarshalJSON([]byte) error { return nil }
func ( AddressTableLookup ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* AddressTableLookup ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_AddressTableLookup *AddressTableLookup

func ( BlockData ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* BlockData ) UnmarshalJSON([]byte) error { return nil }
func ( BlockData ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* BlockData ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_BlockData *BlockData

func ( BlockResult ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* BlockResult ) UnmarshalJSON([]byte) error { return nil }
func ( BlockResult ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* BlockResult ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_BlockResult *BlockResult

func ( HTTPBlockMessage ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* HTTPBlockMessage ) UnmarshalJSON([]byte) error { return nil }
func ( HTTPBlockMessage ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* HTTPBlockMessage ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_HTTPBlockMessage *HTTPBlockMessage

func ( HTTPTxMessage ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* HTTPTxMessage ) UnmarshalJSON([]byte) error { return nil }
func ( HTTPTxMessage ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* HTTPTxMessage ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_HTTPTxMessage *HTTPTxMessage

func ( InnerInstruction ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* InnerInstruction ) UnmarshalJSON([]byte) error { return nil }
func ( InnerInstruction ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* InnerInstruction ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_InnerInstruction *InnerInstruction

func ( InnerSwap ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* InnerSwap ) UnmarshalJSON([]byte) error { return nil }
func ( InnerSwap ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* InnerSwap ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_InnerSwap *InnerSwap

func ( Instruction ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Instruction ) UnmarshalJSON([]byte) error { return nil }
func ( Instruction ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Instruction ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Instruction *Instruction

func ( LoadedAddresses ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* LoadedAddresses ) UnmarshalJSON([]byte) error { return nil }
func ( LoadedAddresses ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* LoadedAddresses ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_LoadedAddresses *LoadedAddresses

func ( LogDetails ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* LogDetails ) UnmarshalJSON([]byte) error { return nil }
func ( LogDetails ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* LogDetails ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_LogDetails *LogDetails

func ( Message ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Message ) UnmarshalJSON([]byte) error { return nil }
func ( Message ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Message ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Message *Message

func ( MetaplexData ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* MetaplexData ) UnmarshalJSON([]byte) error { return nil }
func ( MetaplexData ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* MetaplexData ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_MetaplexData *MetaplexData

func ( MetaplexMetadata ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* MetaplexMetadata ) UnmarshalJSON([]byte) error { return nil }
func ( MetaplexMetadata ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* MetaplexMetadata ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_MetaplexMetadata *MetaplexMetadata

func ( MetaplexMetadataData ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* MetaplexMetadataData ) UnmarshalJSON([]byte) error { return nil }
func ( MetaplexMetadataData ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* MetaplexMetadataData ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_MetaplexMetadataData *MetaplexMetadataData

func ( NativeInOutData ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* NativeInOutData ) UnmarshalJSON([]byte) error { return nil }
func ( NativeInOutData ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* NativeInOutData ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_NativeInOutData *NativeInOutData

func ( ParsedDataInfo ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* ParsedDataInfo ) UnmarshalJSON([]byte) error { return nil }
func ( ParsedDataInfo ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* ParsedDataInfo ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_ParsedDataInfo *ParsedDataInfo

func ( PoolInit ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* PoolInit ) UnmarshalJSON([]byte) error { return nil }
func ( PoolInit ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* PoolInit ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_PoolInit *PoolInit

func ( RaySwapLog ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* RaySwapLog ) UnmarshalJSON([]byte) error { return nil }
func ( RaySwapLog ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* RaySwapLog ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_RaySwapLog *RaySwapLog

func ( SolBalanceDiff ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* SolBalanceDiff ) UnmarshalJSON([]byte) error { return nil }
func ( SolBalanceDiff ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* SolBalanceDiff ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_SolBalanceDiff *SolBalanceDiff

func ( SolSwap ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* SolSwap ) UnmarshalJSON([]byte) error { return nil }
func ( SolSwap ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* SolSwap ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_SolSwap *SolSwap

func ( SolSwapData ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* SolSwapData ) UnmarshalJSON([]byte) error { return nil }
func ( SolSwapData ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* SolSwapData ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_SolSwapData *SolSwapData

func ( SolTransfer ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* SolTransfer ) UnmarshalJSON([]byte) error { return nil }
func ( SolTransfer ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* SolTransfer ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_SolTransfer *SolTransfer

func ( SolanaBlockTx ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* SolanaBlockTx ) UnmarshalJSON([]byte) error { return nil }
func ( SolanaBlockTx ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* SolanaBlockTx ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_SolanaBlockTx *SolanaBlockTx

func ( SolanaTx ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* SolanaTx ) UnmarshalJSON([]byte) error { return nil }
func ( SolanaTx ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* SolanaTx ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_SolanaTx *SolanaTx

func ( SwapBaseInLog ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* SwapBaseInLog ) UnmarshalJSON([]byte) error { return nil }
func ( SwapBaseInLog ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* SwapBaseInLog ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_SwapBaseInLog *SwapBaseInLog

func ( SwapBaseOutLog ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* SwapBaseOutLog ) UnmarshalJSON([]byte) error { return nil }
func ( SwapBaseOutLog ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* SwapBaseOutLog ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_SwapBaseOutLog *SwapBaseOutLog

func ( SystemProgramData ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* SystemProgramData ) UnmarshalJSON([]byte) error { return nil }
func ( SystemProgramData ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* SystemProgramData ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_SystemProgramData *SystemProgramData

func ( TokenBalance ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* TokenBalance ) UnmarshalJSON([]byte) error { return nil }
func ( TokenBalance ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* TokenBalance ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_TokenBalance *TokenBalance

func ( TokenInOutData ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* TokenInOutData ) UnmarshalJSON([]byte) error { return nil }
func ( TokenInOutData ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* TokenInOutData ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_TokenInOutData *TokenInOutData

func ( TokenProgramData ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* TokenProgramData ) UnmarshalJSON([]byte) error { return nil }
func ( TokenProgramData ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* TokenProgramData ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_TokenProgramData *TokenProgramData

func ( TransactionData ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* TransactionData ) UnmarshalJSON([]byte) error { return nil }
func ( TransactionData ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* TransactionData ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_TransactionData *TransactionData

func ( TransactionError ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* TransactionError ) UnmarshalJSON([]byte) error { return nil }
func ( TransactionError ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* TransactionError ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_TransactionError *TransactionError

func ( TransactionMeta ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* TransactionMeta ) UnmarshalJSON([]byte) error { return nil }
func ( TransactionMeta ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* TransactionMeta ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_TransactionMeta *TransactionMeta

func ( TransactionStatus ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* TransactionStatus ) UnmarshalJSON([]byte) error { return nil }
func ( TransactionStatus ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* TransactionStatus ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_TransactionStatus *TransactionStatus

func ( UITokenAmount ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* UITokenAmount ) UnmarshalJSON([]byte) error { return nil }
func ( UITokenAmount ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* UITokenAmount ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_UITokenAmount *UITokenAmount

func ( WSBlockMessage ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* WSBlockMessage ) UnmarshalJSON([]byte) error { return nil }
func ( WSBlockMessage ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* WSBlockMessage ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_WSBlockMessage *WSBlockMessage
